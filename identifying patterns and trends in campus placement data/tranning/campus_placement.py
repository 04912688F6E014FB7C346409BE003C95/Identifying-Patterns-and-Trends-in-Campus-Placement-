# -*- coding: utf-8 -*-
"""campus placement.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16RAtzYy5FN0IbHgQE1pUc02W2E3IM9gR
"""

import numpy as np 
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import warnings
warnings.filterwarnings('ignore')

plt.style.available

plt.style.use('fivethirtyeight')

df=pd.read_csv('/content/collegePlace.csv')
df.tail()

df.info()

plt.figure(figsize=(12,5))
plt.subplot(121)
sns.distplot(df['Internships'])
plt.subplot(122)
sns.distplot(df['Hostel'])

# creating dummy dataframe for categorical values

df_cat = df.select_dtypes(include='int64')
df_cat.head()

# visualizing counts in each variable
plt.figure(figsize=(18,4))
for i,j in enumerate(df_cat):
  plt.subplot(1,6,i+1)
  sns.countplot(df[j])

# Bivarite analysis - Extracting info from a double column

# Visualizing the relation between Age,Internships,Hostel,cgpa,HistoryOfBacklogs & PlacedOrNot

plt.figure(figsize=(10,5))
plt.subplot(131)
sns.countplot(df['PlacedOrNot'],x=df['Age'])
plt.subplot(132)
sns.countplot(df['PlacedOrNot'],x=df['Internships'])
plt.subplot(133)
sns.countplot(df['PlacedOrNot'],x=df['Hostel'])
plt.subplot(131)
sns.countplot(df['PlacedOrNot'],x=df['CGPA'])
plt.subplot(132)
sns.countplot(df['PlacedOrNot'],x=df['HistoryOfBacklogs'])

# creating new column

df['Age_'] = ['15-30' if x<=30 else "30-50" if x>30 and x<=50 else '50+' for x in df['Age']]

df.head()

# Multivariate analysis - Extra info from more than 2 columns

# Finding corr()
sns.heatmap(df.corr())

"""

*   List item
*   List item

"""

# Descritive analysis _ descriptive stat

df.describe(include='all')

# Data preprocessing

# Finding the shape of data

df.shape

# Finding null values

df.isnull().sum()

# Finding dtype

df.info()

# Finding outliers

sns.boxplot(df['Hostel'])

# Finding the count of outliers

# IOR = q3-q1....., ub = q3+(1.5*IOR), 1b = q1-(1.5*IOR)

q1 = np.quantile(df['Hostel'],0.25)

q3 = np.quantile(df['Hostel'],0.25)

from seaborn.distributions import disport distplot

# Handling outliers

from scipy import stats

plt.figure(figsize=(15,4))

plt.subplot(131)

sns,distplot(df['Hostel'])

plt.subplot(132)

stats.probplot(np.log(df['Hostel']),plot=plt)

# Transforming normal values to log values

df['Hostel']=np.log(df['Hostel'])

df.head()

# Encoding

df['HistoryOfBacklogs'] = [ 0 if x=='LOW' else 1 if x=='NORMAL' else 2 for x in df['HistoryOfBacklogs']]

df['Gender'] = df['Gender'].replace({'f':0, 'M':1})

df.head()

# Spoliting deep & Indep variables

X = df.drop('PlacedOrNot',axis=1)

X.head()

# simple linear reg

# Import necessary lib

import numpy as np

import pandas as pd

3 Reading the data

df = pd.read_csv('/content/college.csv')

df.head()

# checking the datatype

df.info

# Descriptive stat

df.describe()

# Checking null values

df.isnull().sum()

# visualizing data points

import matplotlib.pyplot as plt

plt.scatter(df['HistoryOfBacklogs'],df['CGPA'])

# independent variable

X = df.iloc[:,0:1]

X.head()

# Dependent Variable

Y = df.iloc[:, 1 :]

Y.head()

# Split training & testing

from sklearn.model_selection import train_test_split

# Checking unique values

df['Stream'].unique()

# Converting object datatype to int

from sklearn.preprocessing import LabelEncoder

df['Stream'] = le.fit_transform(df['stream'])

df.head()

# Independent variables

X = df.iloc[:,0:7]

X.head()

y = df.iloc[:,6:]

y.head()

# finding co_relation

df.corr()

# Spliting In-dependent variable
x = df.iloc[:,0:8]
x.head()

y = df.iloc[:,7:]
y.head()

